# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-03-08 21:03
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('measurement', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DayTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('week', models.PositiveIntegerField()),
                ('day_download', models.FloatField()),
                ('day_upload', models.FloatField()),
                ('day_ping', models.FloatField()),
                ('day_max_ping', models.FloatField()),
                ('day_min_ping', models.FloatField()),
                ('week_download', models.FloatField()),
                ('week_upload', models.FloatField()),
                ('week_ping', models.FloatField()),
                ('week_max_ping', models.FloatField()),
                ('week_min_ping', models.FloatField()),
                ('month_download', models.FloatField()),
                ('month_upload', models.FloatField()),
                ('month_ping', models.FloatField()),
                ('month_max_ping', models.FloatField()),
                ('month_min_ping', models.FloatField()),
                ('year_download', models.FloatField()),
                ('year_upload', models.FloatField()),
                ('year_ping', models.FloatField()),
                ('year_max_ping', models.FloatField()),
                ('year_min_ping', models.FloatField()),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurement.Metric')),
                ('probe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurement.Probe')),
            ],
        ),
        migrations.CreateModel(
            name='DNS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_resolver_failure', models.CharField(blank=True, max_length=50, null=True)),
                ('control_resolver_answers', django.contrib.postgres.fields.jsonb.JSONField()),
                ('control_resolver_resolver_hostname', models.GenericIPAddressField(blank=True, null=True)),
                ('failure', models.CharField(blank=True, max_length=50, null=True)),
                ('answers', django.contrib.postgres.fields.jsonb.JSONField()),
                ('resolver_hostname', models.GenericIPAddressField(blank=True, null=True)),
                ('flag', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='measurement.Flag')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurement.Metric')),
            ],
        ),
        migrations.CreateModel(
            name='HTTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code_match', models.BooleanField(default=False)),
                ('headers_match', models.BooleanField(default=False)),
                ('body_length_match', models.BooleanField(default=False)),
                ('flag', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='measurement.Flag')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurement.Metric')),
            ],
        ),
        migrations.CreateModel(
            name='TCP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_blocked', models.BooleanField(default=False)),
                ('status_failure', models.TextField()),
                ('status_success', models.BooleanField(default=True)),
                ('flag', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='measurement.Flag')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurement.Metric')),
            ],
        ),
    ]
