# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-03-13 19:17
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input', models.CharField(max_length=50, null=True)),
                ('annotations', django.contrib.postgres.fields.jsonb.JSONField()),
                ('report_id', models.CharField(max_length=100)),
                ('report_filename', models.CharField(max_length=250)),
                ('options', models.TextField(null=True)),
                ('probe_cc', models.CharField(max_length=50)),
                ('probe_asn', models.CharField(max_length=50)),
                ('probe_ip', models.GenericIPAddressField()),
                ('data_format_version', models.CharField(max_length=10)),
                ('test_name', models.CharField(max_length=50)),
                ('test_start_time', models.DateTimeField()),
                ('measurement_start_time', models.DateTimeField()),
                ('test_runtime', models.FloatField()),
                ('test_helpers', models.TextField(null=True)),
                ('test_keys', django.contrib.postgres.fields.jsonb.JSONField()),
                ('software_name', models.CharField(max_length=15)),
                ('software_version', models.CharField(max_length=10)),
                ('test_version', models.CharField(max_length=10)),
                ('bucket_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'metrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('abbreviation', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='DNS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isp', models.CharField(max_length=50, verbose_name='Operadora')),
                ('verbose', models.CharField(max_length=50)),
                ('ip', models.GenericIPAddressField()),
                ('public', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_date', models.DateTimeField()),
                ('is_flag', models.BooleanField(default=False)),
                ('flag', models.NullBooleanField(default=False)),
                ('manual_flag', models.BooleanField(default=False)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='event.Event')),
                ('suggested_events', models.ManyToManyField(blank=True, related_name='suggested_events', to='event.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.CharField(max_length=200)),
                ('input', models.CharField(max_length=50, null=True)),
                ('annotations', django.contrib.postgres.fields.jsonb.JSONField()),
                ('report_id', models.CharField(max_length=100)),
                ('report_filename', models.CharField(max_length=250)),
                ('options', models.TextField(null=True)),
                ('probe_cc', models.CharField(max_length=50)),
                ('probe_asn', models.CharField(max_length=50)),
                ('probe_ip', models.GenericIPAddressField()),
                ('data_format_version', models.CharField(max_length=10)),
                ('test_name', models.CharField(max_length=50)),
                ('test_start_time', models.DateTimeField()),
                ('measurement_start_time', models.DateTimeField()),
                ('test_runtime', models.FloatField()),
                ('test_helpers', models.TextField(null=True)),
                ('test_keys', django.contrib.postgres.fields.jsonb.JSONField()),
                ('software_name', models.CharField(max_length=15)),
                ('software_version', models.CharField(max_length=10)),
                ('test_version', models.CharField(max_length=10)),
                ('bucket_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='MutedInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('type_med', models.CharField(choices=[('MED', 'Medicion'), ('DNS', 'Medicion DNS'), ('TCP', 'Medicion TCP'), ('HTTP', 'Medicion HTTP')], default='MED', max_length=50, verbose_name='Tipo de Medicion')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('isp', models.CharField(max_length=100)),
                ('upload', models.CharField(max_length=30, verbose_name='Velocidad de Carga publicitado')),
                ('download', models.CharField(max_length=30, verbose_name='Velocidad de Descarga publicitado')),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Probe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification', models.CharField(max_length=50, unique=True)),
                ('city', models.CharField(max_length=100)),
                ('isp', models.CharField(max_length=100)),
                ('country', models.ForeignKey(default=231, on_delete=django.db.models.deletion.CASCADE, related_name='probes', to='measurement.Country')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='probes', to='measurement.Plan')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='measurement.Country')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
        ),
        migrations.AddField(
            model_name='probe',
            name='region',
            field=models.ForeignKey(default=3479, on_delete=django.db.models.deletion.CASCADE, related_name='probes', to='measurement.State'),
        ),
        migrations.AddField(
            model_name='metric',
            name='probe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='measurement.Probe'),
        ),
    ]
